;;-*- mode: nendo; syntax: scheme -*-;;
;;-* encode : utf-8 -*-
;; test for sekka jisyo library

(use nendo.test)
(load "./lib/jisyo-db.nnd")
(load "./lib/convert-jisyo.nnd")
(load "./lib/henkan.nnd")

(define debug-print-length 2000)

(test-start "henkan engine")
;;===================================================================

;;-------------------------------------------------------------------
(test-section "Create jisyo for test suite")

(let ((_input (StringIO.new
               (string-join
                '(
                  "わたしh /私/"
                  "おこなu /行/行な;※送り位置補正/"
                  "へんかん /変換/返還/"
                  "へんか /変化/返歌/"
                  "へんかs /変化/"
                  "しぜんげんご /自然言語/"
                  "しぜんげんごしょり /自然言語処理/"
                  "しぜんげんごりかい /自然言語理解/"
                  "developer /デベロッパー/ディベロッパー/デベロッパ/"
                  ">あん /案/"
                  "{ /｛/"
                  "かっこ /確固/括弧/各個/各戸/確乎/羯鼓;雅楽の打楽器/格好/『/』;二重鉤括弧/【/】;隅付き括弧/［/］;大括弧(bracket)/〔/〕;亀甲括弧/〈/〉;山括弧/《/》;二重山括弧/｛/｝;中括弧(brace)/「/」;鉤括弧/（/）;小括弧,丸括弧(parenthesis)/‘/’;singlequote/“/”;doublequote/『』/【】/［］/〔〕/〈〉/《》/｛｝/「」/（）/‘’/“”/"
                  "こっか /国家;state/国歌;anthem.「-斉唱」/国花/骨化/國家;「国」旧字/黒化/刻下/】/）/］/』/"
                  "! /！/感嘆符/"
                  ". /．/・/。/…;.../"
                  "* /＊/※/×/"
                  "? /？/"
                  "/ /／/÷/"
                  "!= /≠/"
                  )
                "\n")))
      (sekka-jisyo-data
       '("watashiH Cわたしh" "watasiH Cわたしh" "わたしh /私/" "okonaU Cおこなu" "oconaU Cおこなu" "おこなu /行/行な;※送り位置補正/" "henkan Cへんかん" "hencan Cへんかん" "へんかん /変換/返還/" "henka Cへんか" "henca Cへんか" "へんか /変化/返歌/" "henkaS Cへんかs" "hencaS Cへんかs" "へんかs /変化/" "shizengengo Cしぜんげんご" "sizengengo Cしぜんげんご" "しぜんげんご /自然言語/" "shizengengoshori Cしぜんげんごしょり" "shizengengosyori Cしぜんげんごしょり" "sizengengoshori Cしぜんげんごしょり" "sizengengosyori Cしぜんげんごしょり" "しぜんげんごしょり /自然言語処理/" "shizengengorikai Cしぜんげんごりかい" "shizengengoricai Cしぜんげんごりかい" "sizengengorikai Cしぜんげんごりかい" "sizengengoricai Cしぜんげんごりかい" "しぜんげんごりかい /自然言語理解/" "developer /デベロッパー/ディベロッパー/デベロッパ/" ">an C>あん" ">あん /案/" "{ /｛/" "kakko Cかっこ" "cakko Cかっこ" "かっこ /確固/括弧/各個/各戸/確乎/羯鼓;雅楽の打楽器/格好/『/』;二重鉤括弧/【/】;隅付き括弧/［/］;大括弧(bracket)/〔/〕;亀甲括弧/〈/〉;山括弧/《/》;二重山括弧/｛/｝;中括弧(brace)/「/」;鉤括弧/（/）;小括弧,丸括弧(parenthesis)/‘/’;singlequote/“/”;doublequote/『』/【】/［］/〔〕/〈〉/《》/｛｝/「」/（）/‘’/“”/" "kokka Cこっか" "cokka Cこっか" "こっか /国家;state/国歌;anthem.「-斉唱」/国花/骨化/國家;「国」旧字/黒化/刻下/】/）/］/』/" "! /！/感嘆符/" ". /．/・/。/…;.../" "* /＊/※/×/" "? /？/" "/ /／/÷/" "!= /≠/")
       ))
       
  (test* "Create test jisyo"
         sekka-jisyo-data          
         (convert-skk-jisyo-f _input))

  (let1 sio (StringIO.new (string-join sekka-jisyo-data "\n"))
    (sio.set_encoding "utf-8")
    (load-sekka-jisyo-f sio "./test")))


;;-------------------------------------------------------------------
(test-section "Open the test-suite DB")
(require "kyotocabinet")
(define db (KyotoCabinet::DB.new))
(define a-search (ApproximateSearch.new 0.94))
(test* "DB open"                         #t    (db.open            "./test.kct"))
(test* "DB tune_encoding to utf-8"       #t    (db.tune_encoding   "utf-8"))

;;-------------------------------------------------------------------
(test-section "approximate-search core")

(test* "search keyword list 1"
       '#(#(0.9666666669978037 "henka") #(1.0 "henkan"))
       (a-search.search db "henkan" #f))

(test* "search keyword list 2"
       '#(#(0.9714285717124032 "henkaS"))       
       (a-search.search db "henkanS" #t))

(test* "approximate search 1"
       '((1.0 "henka" "Cへんか") (0.9666666669978037 "henkan" "Cへんかん"))
       (approximate-search db "henka" #f))

(test* "approximate search 2"
       '((0.9666666669978037 "henka" "Cへんか"))
       (approximate-search db "henkaS" #f))


;;-------------------------------------------------------------------
(test-section "henkan (okuri nashi)")

(test* "okuri nashi 1"
       '(("変換" #f "へんかん") ("返還" #f "へんかん") ("変化" #f "へんか") ("返歌" #f "へんか"))
       (henkan-okuri-nashi db "henkan"))

(test* "okuri nashi 2"
       '(("変化" #f "へんか") ("返歌" #f "へんか") ("変換" #f "へんかん") ("返還" #f "へんかん"))
       (henkan-okuri-nashi db "henka"))

(test* "okuri nashi 3"
       '(("変換" #f "へんかん") ("返還" #f "へんかん") ("変化" #f "へんか") ("返歌" #f "へんか"))
       (henkan-okuri-nashi db "henkann"))

(test* "okuri nashi 4"
       '(("自然言語" #f "しぜんげんご"))
       (henkan-okuri-nashi db "shizengengo"))

(test* "okuri nashi 5"
       '(("自然言語処理" #f "しぜんげんごしょり") ("自然言語" #f "しぜんげんご"))
       (henkan-okuri-nashi db "shizengengosyo"))

(test* "okuri nashi 6"
       '(("案" #f ">あん"))
       (henkan-okuri-nashi db ">an"))

(test* "okuri nashi 7"
       '(("案" #f ">あん"))
       (henkan-okuri-nashi db ">ann"))

(test* "okuri nashi 8"
       '(("デベロッパー" #f "developper") ("ディベロッパー" #f "developper") ("デベロッパ" #f "developper"))
       (henkan-okuri-nashi db "developper"))


;;-------------------------------------------------------------------
(test-section "henkan (okuri ari)")

(test* "approximate search 1"
       '((1.0 "henkaS" "Cへんかs"))
       (approximate-search db "henkaS" #t))

(test* "approximate search 2"
       '((0.9714285717124032 "henkaS" "Cへんかs"))
       (approximate-search db "henkanS" #t))

(test* "approximate search 3"
       '((1.0 "okonaU" "Cおこなu"))
       (approximate-search db "okonaU" #t))

(test* "approximate search 4"
       '((0.9666666669978037 "okonaU" "Cおこなu"))
       (approximate-search db "okonU" #t))

(test* "okuri ari 1"
       '(("私は" #f "わたしh"))
       (henkan-okuri-ari db "watashiHa"))

(test* "okuri ari 2"
       '(("変化する" #f "へんかs"))
       (henkan-okuri-ari db "henkaSuru"))

(test* "okuri ari 3"
       '(("変化する" #f "へんかs"))
       (henkan-okuri-ari db "HenkaSuru"))

(test* "okuri ari 4"
       '(("変化する" #f "へんかs"))
       (henkan-okuri-ari db "HenkaSURU"))

(test* "okuri ari 5"
       '(("変化する" #f "へんかs"))
       (henkan-okuri-ari db "HenkaSuRu"))

(test* "okuri ari 6"
       '(("行う" #f "おこなu") ("行なう" "※送り位置補正" "おこなu"))
       (henkan-okuri-ari db "okonaU"))

(test* "okuri ari 7"
       '(("行う" #f "おこなu") ("行なう" "※送り位置補正" "おこなu"))
       (henkan-okuri-ari db "OkonaU"))

(test* "okuri ari 8"
       '(("行う" #f "おこなu") ("行なう" "※送り位置補正" "おこなu"))
       (henkan-okuri-ari db "okonU"))


;;-------------------------------------------------------------------
(test-section "henkan hiragana")

(test* "hiragana 1"
       '(("あいうえお" #f "aiueo") ("アイウエオ" #f "aiueo"))
       (henkan-hiragana db "aiueo"))

(test* "hiragana 2"
       '(("の" #f "no") ("ノ" #f "no"))
       (henkan-hiragana db "no"))

(test* "hiragana 3"
       '(("b" #f "b"))
       (henkan-hiragana db "b"))

(test* "hiragana 4"
       '(("if" #f "if"))
       (henkan-hiragana db "if"))

;;-------------------------------------------------------------------
(test-section "henkan non-kanji")

(test* "non-kanji 1"
       '(("｛" #f "{"))
       (henkan-non-kanji db "{"))

(test* "non-kanji 2"
       '(("！" #f "!") ("感嘆符" #f "!"))
       (henkan-non-kanji db "!"))

(test* "non-kanji 3"
       '(("／" #f "/") ("÷" #f "/"))
       (henkan-non-kanji db "/"))

(test* "non-kanji 4"
       '(("≠" #f "!="))
       (henkan-non-kanji db "!="))


;;-------------------------------------------------------------------
(test-section "sekka henkan toplevel")

(test* "henkan toplevel 1"
       '(("＊" #f "*") ("※" #f "*") ("×" #f "*"))
       (sekka-henkan db "*"))

(test* "henkan toplevel 2"
       '(("しぜんげんごりか" #f "shizengengorika") ("シゼンゲンゴリカ" #f "shizengengorika"))
       (sekka-henkan db "shizengengorika"))

(test* "henkan toplevel 3"
       '(("自然言語理解" #f "しぜんげんごりかい") ("自然言語" #f "しぜんげんご"))
       (sekka-henkan db "Shizengengorika"))

(test* "henkan toplevel 4"
       '(("変化する" #f "へんかs"))
       (sekka-henkan db "henkaSuru"))

(test* "henkan toplevel 5"
       '(("変換" #f "へんかん") ("返還" #f "へんかん") ("変化" #f "へんか") ("返歌" #f "へんか"))
       (sekka-henkan db "Henkan"))

(test* "henkan toplevel 6"
       '(("変換" #f "へんかん") ("返還" #f "へんかん") ("変化" #f "へんか") ("返歌" #f "へんか"))
       (sekka-henkan db "HEnkan"))

(test* "henkan toplevel 7"
       '(("変換" #f "へんかん") ("返還" #f "へんかん") ("変化" #f "へんか") ("返歌" #f "へんか"))
       (sekka-henkan db "HENkan"))


(test* "henkan toplevel(for Elisp) 1"
       '(("＊" nil "*") ("※" nil "*") ("×" nil "*"))
       (sekkaHenkan db "*"))

(test* "henkan toplevel(for Elisp) 2"
       '(("しぜんげんごりか" nil "shizengengorika") ("シゼンゲンゴリカ" nil "shizengengorika"))
       (sekkaHenkan db "shizengengorika"))

(test* "henkan toplevel(for Elisp) 3"
       '(("自然言語理解" nil "しぜんげんごりかい") ("自然言語" nil "しぜんげんご"))
       (sekkaHenkan db "Shizengengorika"))

(test* "henkan toplevel(for Elisp) 4"
       '(("変化する" nil "へんかs"))
       (sekkaHenkan db "henkaSuru"))

(test* "henkan toplevel(for Elisp) 5"
       '(("変換" #f "へんかん") ("返還" #f "へんかん") ("変化" #f "へんか") ("返歌" #f "へんか"))
       (sekka-henkan db "Henkan"))

;;===================================================================
(test-end)
