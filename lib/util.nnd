:; #-*- mode: nendo; syntax: scheme -*-;;
;;
(define (string-drop str n)
  (or (str.slice n (str.size))
      ""))

;; "string" => (cons "s" "tring")
(define (string-split-first-and-rest str)
  (if (= 0 str.size)
      (cons "" "")
      (cons (str.slice 0 1)
            (str.slice 1 str.size))))

(define (string-downcase-first str)
  (let1 _pair (string-split-first-and-rest str)
    (+ (. (car _pair) downcase)
       (cdr _pair))))

(define (split-dict-line line)
  (if-let1 index (line.index #/[ ]+/)
    (list (car (to-list (line.split #/[ ]+/)))
          (. (line.slice index (line.size)) strip))
    #f))

